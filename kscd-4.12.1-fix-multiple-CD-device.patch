diff -urN kscd-4.12.1/audiocd.cpp kscd-4.12.1-patched/audiocd.cpp
--- kscd-4.12.1/audiocd.cpp	2014-01-01 17:33:55.000000000 +1100
+++ kscd-4.12.1-patched/audiocd.cpp	2014-01-16 02:25:05.041826610 +1100
@@ -89,7 +89,7 @@
 			{
 				cd = devList[i].as<Solid::OpticalDisc>();
 				block = odsign.as<Solid::Block>();
-				src = new MediaSource(Cd,block->device());
+				src = new MediaSource(Phonon::Cd, block->device());
 			}
 		}
 	}
@@ -165,7 +165,7 @@
 				kDebug() << "CD inserted!";
 				cd = devList[i].as<Solid::OpticalDisc>();
 				block = odsign.as<Solid::Block>();
-				src = new MediaSource(Cd,block->device());
+				src = new MediaSource(Phonon::Cd, block->device());
 				emit(discChanged ());
 			}
 		}
diff -urN kscd-4.12.1/hwcontroler.cpp kscd-4.12.1-patched/hwcontroler.cpp
--- kscd-4.12.1/hwcontroler.cpp	2014-01-01 17:33:55.000000000 +1100
+++ kscd-4.12.1-patched/hwcontroler.cpp	2014-01-16 02:25:05.042826625 +1100
@@ -71,12 +71,21 @@
 	// else loading  all optical drives
 	else
 	{
+		kDebug() << devList.size() << "Optical Drive detected in the computer";
 		for (int i = 0; i < devList.size();i++)
 		{
 			cdIn.append(new AudioCD(devList[i]));
+			if ((selectedCd==-1) && cdIn[i]->isCdInserted() && (cdIn[i]->getCd()->availableContent() == Solid::OpticalDisc::Audio))
+			{
+				selectedCd = i;
+				kDebug() << "Optical Drive selected :" << cdIn[selectedCd]->getMediaSource()->deviceName();
+			}
+		}
+		if (selectedCd==-1)
+		{
 			selectedCd = 0;
-			connect(cdIn[selectedCd],SIGNAL(discChanged()),this,SLOT(configMedia()));
 		}
+		connect(cdIn[selectedCd],SIGNAL(discChanged()),this,SLOT(configMedia()));
 	}
 
 	selectedS=0;
@@ -492,14 +501,12 @@
 
 bool HWControler::isDiscValid()
 {
-/*	if(getCD()->isCdInserted())
+	if((selectedCd!=-1) && (cdIn[selectedCd]->isCdInserted()))
 	{
-		return !(getCD()->getCd()->discType()&0x01) ;
+		return (cdIn[selectedCd]->getCd()->availableContent() == Solid::OpticalDisc::Audio);
 	}
 	else
 		return false;
-*/
-return true;
 }
 
 void HWControler ::loadPlayList()
